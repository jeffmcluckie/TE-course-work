package com.techelevator;

import java.util.Objects;

public class Person {

    // Constant or a value that does not change, ever (it is final)
    public static final String MY_CONSTANT = "Fruits Basket Person!";

    private String name;
    private boolean isZodiacMember;
    private String gender; // male / female

    // Constructors must have name of the class
    // (kinda looks like a method, but no return type)
    // Make a constructor that takes the name & gender
    // will default isZodiacMember to false
    public Person(String name, String gender) {
        this.name = name;
        this.gender = gender;
        this.isZodiacMember = false;
    }

    // If you don't write a constructor in your class,
    // you get one that looks like this by default.
    public Person() {

    }

    /* If a zodiac member is hugged by someone of the opposite gender,
        they will turn into their zodiac animal, unless that person is
        also a zodiac member.
     */
    public void hug(Person other) {
//        if (other.isZodiacMember && this.isZodiacMember) {
//            System.out.println("Safe hug, nothing weird happens");
//        } else if (!other.isZodiacMember && !this.isZodiacMember) {
//            System.out.println("Safe hug, nothing weird happens");
//        } else {
//            System.out.println("Someone transforms into an animal");
//        }
        // Making the code more DRY & adding other rules
        if ( (!this.isZodiacMember && !other.isZodiacMember) ||    // neither zodiac
                (other.isZodiacMember && this.isZodiacMember) ||   // both zodiac
                (this.getGender().equals( other.getGender() ) )) { // same gender
            System.out.println("Safe hug, nothing weird happens");
        } else {
            System.out.println("Someone transforms into an animal");
        }
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                '}';
    }

    // Generated by the IDE
    // We can define the rules to say when two Person objects are equal!
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Person)) return false;
        Person person = (Person) o;
        return isZodiacMember() == person.isZodiacMember() && Objects.equals(getName(), person.getName()) && Objects.equals(getGender(), person.getGender());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getName(), isZodiacMember(), getGender());
    }

    /*
     * These are my getter/setters for my class properties
     */
    public boolean isZodiacMember() {
        return isZodiacMember;
    }

    public void setZodiacMember(boolean zodiacMember) {
        isZodiacMember = zodiacMember;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
